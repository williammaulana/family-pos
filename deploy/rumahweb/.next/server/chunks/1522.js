"use strict";exports.id=1522,exports.ids=[1522,3330],exports.modules={11522:(t,e,a)=>{a.r(e),a.d(e,{categoryService:()=>o,dashboardService:()=>c,formatCurrency:()=>d,formatDate:()=>l,formatTime:()=>p,productService:()=>n,reportsService:()=>u,transactionService:()=>i,updateTransactionStatus:()=>m,userService:()=>s});var r=a(23330);let s={async getUsers(){let{data:t,error:e}=await r.supabase.from("users").select("*").order("created_at",{ascending:!1});if(e)throw e;return t},async getUserById(t){let{data:e,error:a}=await r.supabase.from("users").select("*").eq("id",t).single();if(a)throw a;return e},async createUser(t){let{data:e,error:a}=await r.supabase.from("users").insert([t]).select().single();if(a)throw a;return e},async updateUser(t,e){let{data:a,error:s}=await r.supabase.from("users").update({...e,updated_at:new Date().toISOString()}).eq("id",t).select().single();if(s)throw s;return a},async deleteUser(t){let{error:e}=await r.supabase.from("users").delete().eq("id",t);if(e)throw e}},o={async getCategories(){let{data:t,error:e}=await r.supabase.from("categories").select("*").order("name");if(e)throw e;return t},async createCategory(t,e){let{data:a,error:s}=await r.supabase.from("categories").insert([{name:t,description:e}]).select().single();if(s)throw s;return a}},n={async getProducts(){let{data:t,error:e}=await r.supabase.from("products").select(`
        *,
        categories(name)
      `).order("name");if(e)throw e;return t?.map(t=>({...t,category:t.categories?.name||"Unknown"}))},async getProductById(t){let{data:e,error:a}=await r.supabase.from("products").select(`
        *,
        categories(name)
      `).eq("id",t).single();if(a)throw a;return{...e,category:e.categories?.name||"Unknown"}},async createProduct(t){let{data:e}=await r.supabase.from("categories").select("id").eq("name",t.category).single(),{data:a,error:s}=await r.supabase.from("products").insert([{...t,category_id:e?.id}]).select(`
        *,
        categories(name)
      `).single();if(s)throw s;return{...a,category:a.categories?.name||"Unknown"}},async updateProduct(t,e){let a={...e,updated_at:new Date().toISOString()};if(e.category){let{data:t}=await r.supabase.from("categories").select("id").eq("name",e.category).single();a={...a,category_id:t?.id},delete a.category}let{data:s,error:o}=await r.supabase.from("products").update(a).eq("id",t).select(`
        *,
        categories(name)
      `).single();if(o)throw o;return{...s,category:s.categories?.name||"Unknown"}},async deleteProduct(t){let{error:e}=await r.supabase.from("products").delete().eq("id",t);if(e)throw e},async updateStock(t,e){let{data:a,error:s}=await r.supabase.from("products").update({stock:e,updated_at:new Date().toISOString()}).eq("id",t).select().single();if(s)throw s;return a},async getLowStockProducts(){let{data:t,error:e}=await r.supabase.from("products").select(`
        *,
        categories(name)
      `).order("stock");if(e)throw e;return(t?.filter(t=>t.stock<=t.min_stock)||[]).map(t=>({...t,category:t.categories?.name||"Unknown"}))}},i={async getTransactions(t){let e=r.supabase.from("transactions").select(`
        *,
        users!transactions_cashier_id_fkey(name),
        transaction_items(
          *,
          products(name)
        )
      `).order("created_at",{ascending:!1});t&&(e=e.limit(t));let{data:a,error:s}=await e;if(s)throw s;return a?.map(t=>({...t,cashierName:t.users?.name||"Unknown",items:t.transaction_items?.map(t=>({productId:t.product_id,productName:t.products?.name||"Unknown",quantity:t.quantity,price:t.price,subtotal:t.subtotal}))||[]}))},async getTransactionById(t){let{data:e,error:a}=await r.supabase.from("transactions").select(`
        *,
        users!transactions_cashier_id_fkey(name),
        transaction_items(
          *,
          products(name)
        )
      `).eq("id",t).single();if(a)throw a;return{...e,cashierName:e.users?.name||"Unknown",items:e.transaction_items?.map(t=>({productId:t.product_id,productName:t.products?.name||"Unknown",quantity:t.quantity,price:t.price,subtotal:t.subtotal}))||[]}},async createTransaction(t){let e=t.items.reduce((t,e)=>t+e.subtotal,0),a=.1*e,s=e+a,o=t.amountPaid-s;for(let e of t.items){if(!e.productId||void 0===e.quantity||void 0===e.price||void 0===e.subtotal)throw Error("Product ID, quantity, price, and subtotal are required for each item");let t=await n.getProductById(e.productId);if(!t)throw Error(`Invalid product ID: ${e.productId}. Product must exist in the products table.`);if(t.stock<e.quantity)throw Error(`Insufficient stock for product ID: ${e.productId}. Available stock: ${t.stock}, requested: ${e.quantity}`)}let{data:i}=await r.supabase.from("transactions").select("transaction_code").order("created_at",{ascending:!1}).limit(1).single(),c=1;i?.transaction_code&&(c=Number.parseInt(i.transaction_code.replace("TRX",""))+1);let u=`TRX${c.toString().padStart(3,"0")}`,{data:d,error:l}=await r.supabase.from("transactions").insert([{transaction_code:u,customer_name:t.customerName,payment_method:t.paymentMethod,payment_amount:t.amountPaid,change_amount:Math.max(0,o),total_amount:s,tax_amount:a,status:"completed",cashier_id:t.cashierId}]).select().single();if(l)throw l;let p=t.items.map(t=>({transaction_id:d.id,product_id:t.productId,quantity:t.quantity,unit_price:t.price,total_price:t.subtotal})),{error:m}=await r.supabase.from("transaction_items").insert(p);if(m)throw m;for(let e of t.items){let{data:t}=await r.supabase.from("products").select("stock").eq("id",e.productId).single();t&&await r.supabase.from("products").update({stock:t.stock-e.quantity,updated_at:new Date().toISOString()}).eq("id",e.productId)}return d},async getTodayTransactions(){let t=new Date().toISOString().split("T")[0],{data:e,error:a}=await r.supabase.from("transactions").select("*").gte("created_at",`${t}T00:00:00`).lt("created_at",`${t}T23:59:59`);if(a)throw a;return e},async updateTransactionStatus(t,e,a){let s={status:e,updated_at:new Date().toISOString()};a&&(s.metadata=a);let{data:o,error:n}=await r.supabase.from("transactions").update(s).eq("id",t).select().single();if(n)throw n;return o}},c={async getDashboardStats(){let t=new Date().toISOString().split("T")[0],e=new Date(Date.now()-864e5).toISOString().split("T")[0],{data:a}=await r.supabase.from("transactions").select("total, transaction_items(quantity)").gte("created_at",`${t}T00:00:00`).lt("created_at",`${t}T23:59:59`),{data:s}=await r.supabase.from("transactions").select("total, transaction_items(quantity)").gte("created_at",`${e}T00:00:00`).lt("created_at",`${e}T23:59:59`),{data:o}=await r.supabase.from("products").select("stock"),n=a?.reduce((t,e)=>t+e.total,0)||0,i=s?.reduce((t,e)=>t+e.total,0)||0,c=a?.reduce((t,e)=>t+(e.transaction_items?.reduce((t,e)=>t+e.quantity,0)||0),0)||0,u=s?.reduce((t,e)=>t+(e.transaction_items?.reduce((t,e)=>t+e.quantity,0)||0),0)||0,d=o?.reduce((t,e)=>t+e.stock,0)||0,l=a?.length||0,p=s?.length||0;return{totalSales:n,productsSold:c,availableStock:d,todayTransactions:l,salesGrowth:Math.round(i>0?(n-i)/i*100:0),productsGrowth:Math.round(u>0?(c-u)/u*100:0),stockGrowth:0,transactionsGrowth:Math.round(p>0?(l-p)/p*100:0)}}},u={async getSalesReports(t=30){let e=new Date(Date.now()-864e5*t).toISOString().split("T")[0],{data:a,error:s}=await r.supabase.from("transactions").select("created_at, total").gte("created_at",`${e}T00:00:00`).order("created_at");if(s)throw s;return Object.entries(a?.reduce((t,e)=>{let a=e.created_at.split("T")[0];return t[a]||(t[a]={totalSales:0,totalTransactions:0}),t[a].totalSales+=e.total,t[a].totalTransactions+=1,t},{})||{}).map(([t,e])=>({date:t,totalSales:e.totalSales,totalTransactions:e.totalTransactions,averageTransaction:e.totalSales/e.totalTransactions}))},async getProductPerformance(){let{data:t,error:e}=await r.supabase.from("transaction_items").select(`
        product_id,
        quantity,
        price,
        subtotal,
        products(name, categories(name))
      `).order("subtotal",{ascending:!1});if(e)throw e;return Object.values(t?.reduce((t,e)=>{let a=e.product_id;return t[a]||(t[a]={productId:a,productName:e.products?.name||"Unknown",category:e.products?.categories?.name||"Unknown",totalSold:0,revenue:0,profit:0}),t[a].totalSold+=e.quantity,t[a].revenue+=e.subtotal,t[a].profit+=.2*e.subtotal,t},{})||{})}},d=t=>new Intl.NumberFormat("id-ID",{style:"currency",currency:"IDR",minimumFractionDigits:0}).format(Math.floor(t)).replace("Rp.","Rp"),l=t=>new Intl.DateTimeFormat("id-ID",{weekday:"long",year:"numeric",month:"long",day:"numeric"}).format(t),p=t=>new Intl.DateTimeFormat("id-ID",{hour:"2-digit",minute:"2-digit"}).format(t),m=i.updateTransactionStatus},23330:(t,e,a)=>{a.d(e,{supabase:()=>n});var r=a(31695);let s=process.env.SUPABASE_URL??"https://your-project-id.supabase.co",o=process.env.SUPABASE_ANON_KEY??"CHANGE_ME",n=s&&o?(0,r.eI)(s,o):function(t){return new Proxy({},{get:()=>()=>{throw Error(t)},apply(){throw Error(t)}})}("Supabase environment variables are not set. Please set NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY (and optionally SUPABASE_URL/SUPABASE_ANON_KEY on the server).")}};